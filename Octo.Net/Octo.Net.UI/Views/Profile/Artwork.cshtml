@model  Octo.Net.UI.ViewModels.UserMessageCommentFile


<div class="container align-items-start flex-wrap pt-5">
    <div class="col-md-5 flex-column p5 justify-content-end">
    @{
        ViewBag.Title = "Artwork";
        Layout = "~/Views/Shared/_adminLayout.cshtml";

        <h1>@Html.DisplayFor(i => Model.User.UserName)</h1>

        <h2>@Html.DisplayFor(i => Model.File.Artwork.Title)</h2>

        if (Model.File != null)
        {
            var base64 = Convert.ToBase64String(Model.File.Content);
            var imgSrc = String.Format("data:image/jpg;base64,{0}", base64);

            <img class="w-100" src="@imgSrc" alt="@Html.DisplayFor(i => Model.File.Artwork.Title)" />
        }
        else
        {
            <div>Error: No Image</div>
        }
    }
        </div>
    <div class="col-md-5 flex-column pl-5">
        <h3>Comments</h3><br />

                         <div class="pre-scrollable">

                             @if (Model.Messages != null)
                             {
                                 foreach (var item in Model.Messages)
                                 {

                                     <span class="small">@Html.DisplayFor(i => item.FromUsername)  - </span>
                                     <span class="text-secondary small font-italic">@Html.DisplayFor(i => item.DateTime)</span>
                                     <br>
                                     @Html.DisplayFor(i => item.Body);
                                     <hr>
                                 }
                             }
                         </div>
        <br />
        <br />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal pt-3">
                <h4>Add a Comment</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.File.Artwork.CollectionMessageId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.File.Artwork.CollectionMessageId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.File.Content, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.File.Content, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.File.UserId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.File.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.Messages, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Messages, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.TextAreaFor(model => model.Comment.Body, new { htmlAttributes = new { @class = "form-control mw-100 w-100" } })
                        @Html.ValidationMessageFor(model => model.Comment.Body, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

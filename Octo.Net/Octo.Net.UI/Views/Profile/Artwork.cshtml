@model  Octo.Net.UI.ViewModels.UserMessageCommentFile

@{
    ViewBag.Title = "Artwork";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}

<h1>@Html.DisplayFor(i => Model.User.UserName)</h1>

<h2>@Html.DisplayFor(i => Model.File.Artwork.Title)</h2>

@using (Html.BeginForm())
{
    if (Model.File != null)
    {
        var base64 = Convert.ToBase64String(Model.File.Content);
        var imgSrc = String.Format("data:image/jpg;base64,{0}", base64);

        <img src="@imgSrc" alt="@Html.DisplayFor(i => Model.File.Artwork.Title)" />
    }
    else
    {
        <div>Error: No Image</div>
    }

    <h3>Messages</h3>

    if (Model.Messages != null)
    {
        foreach (var item in Model.Messages)
        {
        @Html.DisplayFor(i => item.Body);
        }
    }


    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Add a Comment</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Comment.CritiqueId)

    <div class="form-group">
        @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comment.Body, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comment.Body, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}
@model Octo.Net.UI.ViewModels.UserGalleryArtworkFile

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}

    <div class="row">
        <div class="col-md-12">

            <div class="row profile-jumbo">
                <div class="col-md-4 profile-image-area">
                    @foreach (var item in Model.Files)
                    {
                        if (item.FileType == Octo.Net.Models.FileType.Avatar)
                        {
                            var base64 = Convert.ToBase64String(item.Content);
                            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);

                            <img src="@imgSrc" class="rounded-circle profile-image" alt="@Html.DisplayFor(i => Model.User.UserName)'s profile picture" />
                        }
                        else
                        {
                            < img src = "~/Content/img/usersDefault.png" class="rounded-circle profile-image" alt="@Html.DisplayFor(i => Model.User.UserName)'s profile picture" />
                        }
                    }
                </div>
                <div class="col-md-8">
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <h2>Edit @Html.DisplayFor(model => model.User.UserName)'s Profile</h2>
                    <div class="row">
                        <div class="col-md-6">
                            <form>
                                <div class="form-group">

                                    @Html.LabelFor(model => model.User.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.User.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.User.FirstName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.User.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.User.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.User.LastName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.User.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.User.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.User.UserName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.Label("Profile Picture", new { @class = "control-label col-md-4" })
                                    <div class="col-md-10">
                                        <input type="file" id="Avatar" name="upload" />
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.User.CommissionActive, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-10">
                                        @Html.CheckBoxFor(model => model.User.CommissionActive, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.User.CommissionActive, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Submit" class="btn btn-primary btn-lg" />
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-md-6">

                        </div>
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-md-6">

                </div>
                <div class="col-md-6">

                </div>
            </div>
        </div>
    </div>
